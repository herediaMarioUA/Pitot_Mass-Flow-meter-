/*
		       Air Mass flow meter
 
This script uses a: 

a) a pitot tube, 
b) an MPXV7002 differential pressure sensor 
(Sensitivity 1.0 V/kPa; 2.5% typical error over +10°C to +60°C.) 
c) a 16x2 LCD display for data visualization
 
 The circuit:
 * Differential pressure sensor according to 
   datasheet: https://goo.gl/nkx4Xo 

 * LCD display according to: https://goo.gl/oDqm5v  

 * Sensor data acquisition acording to: https://goo.gl/7PebgA

 
 created 26 Jan. 2016
 modified 3 Feb  2017
 by Mario Heredia
 
 This example code is in the public domain.
 
 */

// These constants won't change.  They're used to give names
// to the pins used:

#include <LiquidCrystal.h>
// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
const int numReadings = 25;
// include the library code:

float readings[numReadings];      // the readings from the analog input
int readIndex = 0;              // the index of the current reading
int total = 0;                  // the running total
float average = 0;                // the average

float analogInPin = A0;  // Analog input pin 
float analogOutPin = 9; // Analog output pin 

float sensorValue = 0;        // value read from the MPXV7002
float outputValue = 0;        // value output (analog out)
float Vout = 0;
float Dp = 0;
float Vel = 0;
float MassFlow = 0;
float Area = 0;               // Here introduce the area of the pipe in m^2!

void setup() {
  // initialize serial communications at 9600 bps:
  Serial.begin(9600); 
  // initialize all the readings to 0: 
  for (int thisReading = 0; thisReading < numReadings; thisReading++)
    readings[thisReading] = 0;
     // set up the LCD's number of columns and rows:  



  // set up the LCD's number of columns and rows: 
  lcd.begin(16, 2);
  // Print a message to the LCD.
  lcd.print("Mass flow kg/h");
}

void loop() {
  
  // subtract the last reading:
  total= total - readings[readIndex];         
  // read from the sensor:  
  readings[readIndex] = analogRead(analogInPin); 
  // add the reading to the total:
  total= total + readings[readIndex];       
  // advance to the next position in the array:  
  readIndex = readIndex + 1;                    

  // if we're at the end of the array...
  if (readIndex >= numReadings)              
    // ...wrap around to the beginning: 
    readIndex = 0;                           

  // calculate the average:
  average = total / numReadings;         
  // send it to the computer as ASCII digits
  
// Fluid mechanics calculations

Vout = (average*5)/1023;
  Dp = ((((Vout-0.03125)/5-0.5)/0.2)*1000);
// According to differential pressure sensor datasheet formula 
  Vel = sqrt((Dp*2)/1.205);
  Area= 0.0087;
// Here introdce the area of the pipe in m^2
  MassFlow = ((1.205*Area*Vel)*3600)-300.00;
  // (kg/h);
  outputValue = MassFlow;
  // change the analog out value:
  analogWrite(analogOutPin, outputValue);           
// ** The last value (300) is the SPAN that should be adapted to establish the "zero"


  // print the results to the serial monitor:
 Serial.print("sensor = " );                       
Serial.print(Dp, DEC);        
  Serial.print("\t output = "); 
  Serial.println(outputValue, DEC);   
 // Serial.print("\t \t volts = "); 
 // Serial.println(Vout, DEC);
  // wait 2 milliseconds before the next loop
  // for the analog-to-digital converter to settle
  // after the last reading:
  delay(250);     
// set the cursor to column 0, line 1
  // (note: line 1 is the second row, since counting begins with 0):
  lcd.setCursor(0, 1);
  // print the number of seconds since reset:
  lcd.print(outputValue);
}
